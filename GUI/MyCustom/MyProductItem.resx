<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxIMG.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yUuAyCkAAAAASUVORK5CYII=
</value>
  </data>
</root>